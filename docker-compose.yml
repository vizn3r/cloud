services:
  server:
    build:
      context: .
      dockerfile: server/Dockerfile
      # Use BuildKit for better caching and performance
      cache_from:
        - cloud-server:latest
    image: cloud-server:latest
    container_name: cloud-server
    ports:
      - "8808:8080"
    environment:
      - NODE_ENV=production
      # Add resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    volumes:
      - ./storage:/app/storage
      - ./server/server.json:/app/server.json:ro
    restart: unless-stopped
    networks:
      - cloud-network
    healthcheck:
      test: ["/app/cloud-server", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  webclient:
    build:
      context: .
      dockerfile: webclient/Dockerfile
      cache_from:
        - cloud-webclient:latest
    image: cloud-webclient:latest
    container_name: cloud-webclient
    ports:
      - "8818:8008"
    depends_on:
      server:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    restart: unless-stopped
    networks:
      - cloud-network
    healthcheck:
      test: ["/app/main", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m

volumes:
  cloud_storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./storage

networks:
  cloud-network:
    driver: bridge
